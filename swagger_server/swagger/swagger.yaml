openapi: 3.0.1
info:
  title: Oversale Solicitation API
  description: API Documentation for the oversale solicitation project
  contact:
    email: deahln@rpi.edu
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: http://localhost:3000/api
tags:
- name: Users
  description: User management and authentication
- name: System
  description: System-level api calls for health
- name: Data
  description: Database insertion and management
- name: Model
  description: Machine learning model and analytics
- name: Simulation
  description: Control and status of simulations
- name: Scenario
  description: Defines and controls a scenario
- name: Bid
  description: Endpoints for the prototype interface
paths:
  /ping:
    get:
      tags:
      - System
      summary: Check if system is up and running
      description: Pings the server to check for a healthy response
      operationId: ping_server
      responses:
        "200":
          description: successful ping
          content: {}
      x-swagger-router-controller: swagger_server.controllers.system_controller
      x-openapi-router-controller: swagger_server.controllers.system_controller
  /currentUser:
    get:
      tags:
      - Users
      summary: gets currently authenticated user
      description: Retrieves information about the current user from the microsoft
        Graph API
      operationId: get_users
      responses:
        "200":
          description: list of all users
          content: {}
        "400":
          description: Generic error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - OAuth2:
        - User.ReadBasic.All
      x-swagger-router-controller: swagger_server.controllers.users_controller
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /schema:
    get:
      tags:
      - Data
      - Schema
      summary: Lists all data shemes
      operationId: get_data_schemes
      responses:
        "200":
          description: A list of schemas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataSchema'
                x-content-type: application/json
        default:
          description: Default error sample response
      security:
      - OAuth2:
        - User.ReadBasic.All
      x-openapi-router-controller: swagger_server.controllers.schema_controller
    post:
      tags:
      - Schema
      summary: Add data of scheme type with csv format.
      operationId: post_schema_data
      parameters:
      - name: name
        in: query
        description: name of schema
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: First row is column names, second row is data types, remaining
          are rows of data
        content:
          text/plain:
            schema:
              type: string
              example: |-
                cola,colb,colc
                type1,type2,type3
                data1,data2,data3
                ...
        required: true
      responses:
        "200":
          description: Rows affected
        "404":
          description: Schema doesnt exist
        "500":
          description: Data is improper
        default:
          description: Default error sample response
      security:
      - OAuth2:
        - User.ReadBasic.All
      x-openapi-router-controller: swagger_server.controllers.schema_controller
  /data:
    summary: Controls the storage, listing, control, and retrieval of data from the
      simulation engine.
    get:
      tags:
      - Data
      summary: Get data of scheme type
      operationId: get_data
      parameters:
      - name: name
        in: query
        description: name of schema
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: amount
        in: query
        description: amount of data
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: filters
        in: query
        description: column specific filters (..:columnname,value)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: Rows Returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataRow'
                x-content-type: application/json
        "404":
          description: No data found
        default:
          description: Default error sample response
      security:
      - OAuth2:
        - User.ReadBasic.All
      x-openapi-router-controller: swagger_server.controllers.data_controller
    put:
      tags:
      - Data
      summary: Add data scheme
      operationId: put_add_scheme
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSchema'
        required: true
      responses:
        "200":
          description: Scheme successfully added.
        "400":
          description: Invalid input
        default:
          description: Default error sample response
      security:
      - OAuth2:
        - User.ReadBasic.All
      x-openapi-router-controller: swagger_server.controllers.data_controller
    post:
      tags:
      - Data
      summary: Add data of scheme type
      operationId: post_add_data
      parameters:
      - name: name
        in: query
        description: name of schema
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Data'
        required: true
      responses:
        "200":
          description: Rows affected
        "404":
          description: Schema doesnt exist
        "500":
          description: Data is improper
        default:
          description: Default error sample response
      security:
      - OAuth2:
        - User.ReadBasic.All
      x-openapi-router-controller: swagger_server.controllers.data_controller
    delete:
      tags:
      - Data
      summary: Delete data of scheme type
      operationId: delete_data
      parameters:
      - name: name
        in: query
        description: name of schema
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Rows affected
          content:
            application/json:
              schema:
                type: integer
                x-content-type: application/json
        "404":
          description: Failure to find schema
        default:
          description: Default error sample response
      security:
      - OAuth2:
        - User.ReadBasic.All
      x-openapi-router-controller: swagger_server.controllers.data_controller
  /model:
    summary: Controls models
    get:
      tags:
      - Model
      summary: gets model of id
      operationId: get_model
      responses:
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.model_controller
    put:
      tags:
      - Model
      summary: Adds new model
      operationId: put_model
      responses:
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.model_controller
    post:
      tags:
      - Model
      summary: Adds new version of model of id
      operationId: post_model
      responses:
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.model_controller
    delete:
      tags:
      - Model
      summary: Deletes model of id
      operationId: delete_model
      responses:
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.model_controller
    options:
      tags:
      - Model
      summary: Gets all models
      operationId: options_model
      responses:
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.model_controller
  /model/newModel:
    post:
      tags:
      - Model
      summary: Create new model
      operationId: create_model
      parameters:
      - name: id
        in: query
        description: the id representing the model
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: the name of the model being created
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: prediction
        in: query
        description: the name of the column you want predicted
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: schema_id
        in: query
        description: the id of the schema collection you wish to use in order to generate
          the data needed for the model
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: the version of the model
        required: true
        style: form
        explode: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelSchema'
        required: true
      responses:
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.model_controller
  /model/predictModel:
    post:
      tags:
      - Model
      summary: Output the prediction from one of the models
      operationId: predict_model
      parameters:
      - name: model_name
        in: query
        description: the name of the model you wish to use
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: schema_id
        in: query
        description: the id of the model schema you wish to use
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictModel'
        required: true
      responses:
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.model_controller
  /model/trainModel:
    post:
      tags:
      - Model
      summary: Train one of the models
      operationId: train_model
      parameters:
      - name: model_id
        in: query
        description: the id of the model you wish to use
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: collection_name
        in: query
        description: the name of the collection you wish to collect data from
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingModelSchema'
        required: true
      responses:
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.model_controller
  /model/definition:
    post:
      tags:
      - Model
      summary: Creates new model definition
      operationId: define_model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelDefinition'
        required: true
      responses:
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.model_controller
  /simulation:
    summary: Retrieve simulations
    get:
      tags:
      - Simulation
      summary: Lists simulations with no id. With id it returns data for simulation
      operationId: get_simulation
      parameters:
      - name: limit
        in: query
        description: max amount of recent simulations to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: id
        in: query
        description: ID of simulation info you would like to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.simulation_controller
    post:
      tags:
      - Simulation
      summary: Creates new simulation. Starts simulation if given id.
      operationId: post_simulation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimulationStart'
        required: true
      responses:
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.simulation_controller
    options:
      tags:
      - Simulation
      summary: Shows simulation types and options
      operationId: options_simulation
      responses:
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.simulation_controller
  /simulation/summary:
    get:
      tags:
      - Simulation
      summary: Retrieve summary details for a specific simulation
      operationId: simulation_summary
      parameters:
      - name: id
        in: query
        description: ID of simulation info you would like to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Compensation summary
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.simulation_controller
  /simulation/timeline:
    get:
      tags:
      - Simulation
      summary: View chronological list of events for a given simulation
      operationId: simulation_timeline
      parameters:
      - name: id
        in: query
        description: ID of simulation info you would like to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Chronological list of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimelineEvent'
                x-content-type: application/json
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.simulation_controller
  /simulation/volunteers:
    get:
      tags:
      - Simulation
      summary: View list of all volunteers for a given simulation
      operationId: simulation_volunteers
      parameters:
      - name: id
        in: query
        description: ID of simulation info you would like to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: List of all customers who volunteered
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Volunteer'
                x-content-type: application/json
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.simulation_controller
  /simulation/bids:
    get:
      tags:
      - Simulation
      summary: View bid history for a given simulation
      operationId: simulation_bids
      parameters:
      - name: id
        in: query
        description: ID of simulation info you would like to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Chronological list of bids
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BidEvent'
                x-content-type: application/json
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.simulation_controller
  /simulation/compensation:
    get:
      tags:
      - Simulation
      summary: View all compensation for a given simulation
      operationId: simulation_compensation
      parameters:
      - name: id
        in: query
        description: ID of simulation info you would like to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Compensation summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompensationSummary'
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.simulation_controller
  /simulation/passenger:
    get:
      tags:
      - Simulation
      summary: View simulation details for a given passenger
      operationId: simulation_passenger
      parameters:
      - name: id
        in: query
        description: ID of simulation info you would like to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: passengerid
        in: query
        description: ID of passenger
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Compensation summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolunteerDetails'
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.simulation_controller
  /scenario:
    summary: Manages scenarios
    get:
      tags:
      - Scenario
      summary: Lists scenarios with no id. With id it returns data for scenario
      operationId: get_scenario
      responses:
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.scenario_controller
    post:
      tags:
      - Scenario
      summary: Creates new scenario
      operationId: post_scenario
      responses:
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.scenario_controller
  /bid:
    summary: Controls bidding
    get:
      tags:
      - Bid
      summary: Gets current bid estimate and data with user id.
      operationId: get_bid
      responses:
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.bid_controller
    post:
      tags:
      - Bid
      summary: Posts bid to server. Returns accepted or denied states.
      operationId: post_bid
      responses:
        default:
          description: Default error sample response
      x-openapi-router-controller: swagger_server.controllers.bid_controller
components:
  schemas:
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: number
          example: 400
        message:
          type: string
    Success:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: number
          example: 200
        message:
          type: string
          example: success
      example:
        code: 200
        message: success
    DataSchema:
      required:
      - fields
      - id
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        fields:
          $ref: '#/components/schemas/DataRow'
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        fields:
          fields:
          - field: field
            datatype: datatype
            value: value
          - field: field
            datatype: datatype
            value: value
    DataRow:
      required:
      - fields
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/DataRow_fields'
      example:
        fields:
        - field: field
          datatype: datatype
          value: value
        - field: field
          datatype: datatype
          value: value
    Data:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataRow'
    DataRow_fields:
      properties:
        field:
          type: string
        datatype:
          type: string
        value:
          type: string
      example:
        field: field
        datatype: datatype
        value: value
    ModelSchema:
      required:
      - id
      - name
      - prediction
      - schema_id
      - version
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        prediction:
          type: string
        schema_id:
          type: string
        version:
          type: integer
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: accepted flight prediction
        prediction: accepted
        schema_id: dI8m49ZU6M
        version: 1
    TrainingModelSchema:
      required:
      - collection_name
      - model_id
      type: object
      properties:
        model_id:
          type: string
        collection_name:
          type: string
      example:
        model_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        collection_name: Flight
    PredictModel:
      required:
      - model_name
      - schema_id
      type: object
      properties:
        model_name:
          type: string
        schema_id:
          type: string
      example:
        model_name: flight number 1 model
        schema_id: 05d3667c-b1d5-4b17-861e-f589b8c0e468
    TimelineEvent:
      required:
      - event_type
      - time
      type: object
      properties:
        time:
          type: string
        event_type:
          type: string
        details:
          type: object
      example:
        time: {}
        event_type: CHECK_IN
        details:
          name: DOE/JOHN
    Volunteer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        fin_dest:
          type: string
        cabin:
          type: string
        vol_method:
          type: string
        processed:
          type: boolean
      example:
        id: 11788967
        name: BETANCOURT/CRISTINA
        fin_dest: IAH
        cabin: "Y"
        vol_method: WEB
        processed: false
    BidEvent:
      type: object
      properties:
        bid_id:
          type: integer
        vol_id:
          type: integer
        vol_name:
          type: string
        timestamp:
          type: string
        etc_comp:
          type: integer
        miles_comp:
          type: integer
        initiated_by:
          type: string
          enum:
          - USER
          - AGENT
        accepted:
          type: boolean
      example:
        bid_id: 361736
        vol_id: 11788967
        vol_name: BETANCOURT/CRISTINA
        timestamp: {}
        etc_comp: 100
        miles_comp: 5000
        initated_by: AGENT
        accepted: true
    CompensationSummary:
      type: object
      properties:
        total_comp:
          type: integer
        comp_list:
          type: array
          items:
            $ref: '#/components/schemas/CompensationRecord'
      example:
        comp_list:
        - comp_amount: 5
          comp_type: comp_type
          comp_id: 6
          vol_id: 1
        - comp_amount: 5
          comp_type: comp_type
          comp_id: 6
          vol_id: 1
        total_comp: 0
    CompensationRecord:
      type: object
      properties:
        comp_id:
          type: integer
        vol_id:
          type: integer
        comp_type:
          type: string
        comp_amount:
          type: integer
      example:
        comp_amount: 5
        comp_type: comp_type
        comp_id: 6
        vol_id: 1
    SimulationStart:
      type: object
      properties:
        scenarioId:
          type: string
        parameters:
          type: object
    VolunteerDetails:
      type: object
      properties:
        vol_info:
          $ref: '#/components/schemas/Volunteer'
        bid_history:
          type: array
          items:
            $ref: '#/components/schemas/BidEvent'
        compensation:
          type: array
          items:
            $ref: '#/components/schemas/CompensationRecord'
      example:
        bid_history:
        - bid_id: 361736
          vol_id: 11788967
          vol_name: BETANCOURT/CRISTINA
          timestamp: {}
          etc_comp: 100
          miles_comp: 5000
          initated_by: AGENT
          accepted: true
        - bid_id: 361736
          vol_id: 11788967
          vol_name: BETANCOURT/CRISTINA
          timestamp: {}
          etc_comp: 100
          miles_comp: 5000
          initated_by: AGENT
          accepted: true
        compensation:
        - comp_amount: 5
          comp_type: comp_type
          comp_id: 6
          vol_id: 1
        - comp_amount: 5
          comp_type: comp_type
          comp_id: 6
          vol_id: 1
        vol_info:
          id: 11788967
          name: BETANCOURT/CRISTINA
          fin_dest: IAH
          cabin: "Y"
          vol_method: WEB
          processed: false
    ModelDefinition:
      type: object
      properties:
        def_name:
          type: string
        data_schema_name:
          type: string
        passenger_target:
          type: string
        comp_target:
          type: string
        ignore_pass:
          type: array
          items:
            type: string
        ignore_comp:
          type: array
          items:
            type: string
  responses:
    ErrorResponse:
      description: Generic error response
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    SuccessResponse:
      description: Successful response
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Success'
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/aaf653e1-0bcd-4c2c-8658-12eb03e15774/oauth2/v2.0/authorize
          scopes:
            User.ReadBasic.All: Ability to read user profile
      x-tokenInfoFunc: swagger_server.controllers.authorization_controller.check_OAuth2
      x-scopeValidateFunc: swagger_server.controllers.authorization_controller.validate_scope_OAuth2

