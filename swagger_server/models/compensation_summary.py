# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.compensation_record import CompensationRecord  # noqa: F401,E501
from swagger_server import util


class CompensationSummary(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, total_comp: int=None, comp_list: List[CompensationRecord]=None):  # noqa: E501
        """CompensationSummary - a model defined in Swagger

        :param total_comp: The total_comp of this CompensationSummary.  # noqa: E501
        :type total_comp: int
        :param comp_list: The comp_list of this CompensationSummary.  # noqa: E501
        :type comp_list: List[CompensationRecord]
        """
        self.swagger_types = {
            'total_comp': int,
            'comp_list': List[CompensationRecord]
        }

        self.attribute_map = {
            'total_comp': 'total_comp',
            'comp_list': 'comp_list'
        }
        self._total_comp = total_comp
        self._comp_list = comp_list

    @classmethod
    def from_dict(cls, dikt) -> 'CompensationSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CompensationSummary of this CompensationSummary.  # noqa: E501
        :rtype: CompensationSummary
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_comp(self) -> int:
        """Gets the total_comp of this CompensationSummary.


        :return: The total_comp of this CompensationSummary.
        :rtype: int
        """
        return self._total_comp

    @total_comp.setter
    def total_comp(self, total_comp: int):
        """Sets the total_comp of this CompensationSummary.


        :param total_comp: The total_comp of this CompensationSummary.
        :type total_comp: int
        """

        self._total_comp = total_comp

    @property
    def comp_list(self) -> List[CompensationRecord]:
        """Gets the comp_list of this CompensationSummary.


        :return: The comp_list of this CompensationSummary.
        :rtype: List[CompensationRecord]
        """
        return self._comp_list

    @comp_list.setter
    def comp_list(self, comp_list: List[CompensationRecord]):
        """Sets the comp_list of this CompensationSummary.


        :param comp_list: The comp_list of this CompensationSummary.
        :type comp_list: List[CompensationRecord]
        """

        self._comp_list = comp_list
