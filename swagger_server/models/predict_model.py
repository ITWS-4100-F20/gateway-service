# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.data_row import DataRow  # noqa: F401,E501
from swagger_server import util


class ModelSchema(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, model_name: str=None, schema_id: str=None):  # noqa: E501
        """DataSchema - a model defined in Swagger

        :param id: The id of this DataSchema.  # noqa: E501
        :type id: str
        :param name: The name of this DataSchema.  # noqa: E501
        :type name: str
        :param fields: The fields of this DataSchema.  # noqa: E501
        :type fields: DataRow
        """
        self.swagger_types = {
            'model_name': str,
            'schema_id':str
        }

        self.attribute_map = {
            'model_name': 'model_name',
            'schema_id':'schema_id'
        }
        self._model_name = model_name
        self._schema_id = schema_id

    @classmethod
    def from_dict(cls, dikt) -> 'DataSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DataSchema of this DataSchema.  # noqa: E501
        :rtype: DataSchema
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_name(self) -> str:
        """Gets the id of this DataSchema.


        :return: The id of this DataSchema.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name: str):
        """Sets the id of this DataSchema.


        :param id: The id of this DataSchema.
        :type id: str
        """

        self._model_name = model_name

    

    @property
    def schema_id(self) -> str:
        """Gets the name of this DataSchema.


        :return: The name of this DataSchema.
        :rtype: str
        """
        return self._schema_id

    @schema_id.setter
    def schema_id(self, schema_id: str):
        """Sets the name of this DataSchema.


        :param name: The name of this DataSchema.
        :type name: str
        """

        self._schema_id = schema_id