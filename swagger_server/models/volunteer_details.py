# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.bid_event import BidEvent  # noqa: F401,E501
from swagger_server.models.compensation_record import CompensationRecord  # noqa: F401,E501
from swagger_server.models.volunteer import Volunteer  # noqa: F401,E501
from swagger_server import util


class VolunteerDetails(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, vol_info: Volunteer=None, bid_history: List[BidEvent]=None, compensation: List[CompensationRecord]=None):  # noqa: E501
        """VolunteerDetails - a model defined in Swagger

        :param vol_info: The vol_info of this VolunteerDetails.  # noqa: E501
        :type vol_info: Volunteer
        :param bid_history: The bid_history of this VolunteerDetails.  # noqa: E501
        :type bid_history: List[BidEvent]
        :param compensation: The compensation of this VolunteerDetails.  # noqa: E501
        :type compensation: List[CompensationRecord]
        """
        self.swagger_types = {
            'vol_info': Volunteer,
            'bid_history': List[BidEvent],
            'compensation': List[CompensationRecord]
        }

        self.attribute_map = {
            'vol_info': 'vol_info',
            'bid_history': 'bid_history',
            'compensation': 'compensation'
        }
        self._vol_info = vol_info
        self._bid_history = bid_history
        self._compensation = compensation

    @classmethod
    def from_dict(cls, dikt) -> 'VolunteerDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VolunteerDetails of this VolunteerDetails.  # noqa: E501
        :rtype: VolunteerDetails
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vol_info(self) -> Volunteer:
        """Gets the vol_info of this VolunteerDetails.


        :return: The vol_info of this VolunteerDetails.
        :rtype: Volunteer
        """
        return self._vol_info

    @vol_info.setter
    def vol_info(self, vol_info: Volunteer):
        """Sets the vol_info of this VolunteerDetails.


        :param vol_info: The vol_info of this VolunteerDetails.
        :type vol_info: Volunteer
        """

        self._vol_info = vol_info

    @property
    def bid_history(self) -> List[BidEvent]:
        """Gets the bid_history of this VolunteerDetails.


        :return: The bid_history of this VolunteerDetails.
        :rtype: List[BidEvent]
        """
        return self._bid_history

    @bid_history.setter
    def bid_history(self, bid_history: List[BidEvent]):
        """Sets the bid_history of this VolunteerDetails.


        :param bid_history: The bid_history of this VolunteerDetails.
        :type bid_history: List[BidEvent]
        """

        self._bid_history = bid_history

    @property
    def compensation(self) -> List[CompensationRecord]:
        """Gets the compensation of this VolunteerDetails.


        :return: The compensation of this VolunteerDetails.
        :rtype: List[CompensationRecord]
        """
        return self._compensation

    @compensation.setter
    def compensation(self, compensation: List[CompensationRecord]):
        """Sets the compensation of this VolunteerDetails.


        :param compensation: The compensation of this VolunteerDetails.
        :type compensation: List[CompensationRecord]
        """

        self._compensation = compensation
